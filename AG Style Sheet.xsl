<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>AG Style Sheet</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl/>
        </encodingDesc>
        <revisionDesc>
            <change when="2023-11-07-05:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="TEST1" source="teipublisher.odd"> <elementSpec ident="app" mode="add">
                    <model behaviour="alternate">
            <param name="default" value="lem"/>
            <param name="alternate" value="rdg"/>
            <outputRendition xml:space="preserve">
            color: #FF0000;
            </outputRendition>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="rdg" mode="add">
                    <model predicate="@wit=&#34;#P2&#34;" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: 'P2: ';
font-weight: bold;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"\a";
white-space: pre;
            </outputRendition>
        </model>
                    <model predicate="@wit=&#34;#P1&#34;" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: 'P1: ';
font-weight: bold;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"\a";
white-space: pre;
            </outputRendition>
        </model>
                    <model predicate="@wit=&#34;#M2&#34;" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: 'M2: ';
font-weight: bold;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"\a";
white-space: pre;
            </outputRendition>
        </model>
                    <model predicate="@wit=&#34;#G&#34;" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: 'G: ';
font-weight: bold;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"\a";
white-space: pre;
            </outputRendition>
        </model>
                    <model predicate="@wit=&#34;#V&#34;" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: 'V: ';
font-weight: bold;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"\a";
white-space: pre;
            </outputRendition>
        </model>
                    <model predicate="@wit=&#34;#M1&#34;" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: 'M1: ';
font-weight: bold;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"\a";
white-space: pre;
            </outputRendition>
        </model>
                    <model output="latex" behaviour="inline">
            <param name="id" value="substring-after(@ref, '#')"/>
            <pb:template xmlns="" xml:space="preserve">\glsslink{[[id]]}{[[content]]}</pb:template>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="i" mode="add">
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="b" mode="add"/>
            </schemaSpec>
        </body>
    </text>
</TEI>
