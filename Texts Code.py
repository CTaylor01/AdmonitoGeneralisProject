import numpy as np

def EuclideanDistance(list1, list2):

    sum = 0
    for i in range(len(list1)):
        sum += (list1[i] - list2[i])**2

    return np.sqrt(sum)

V = [0,1,1,0,0,1,1,0,0,1,0,0,1,0,1,1,0,1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,1,1,0,0,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,1,0,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,1,0,0,1,1,0,0,1,0,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,1]
M3 = [1,0,1,0,0.5,0.5,1,0,0.5,0.5,1,0,0,0.5,0.5,1,0,1,0,0.5,0.5,0,0.5,0.5,1,0,0.5,0.5,0,1,1,0,1,0,0,1,0.5,0.5,0,0.5,0.5,0,1,0,0,1,1,0,1,0,0,1,0,0.5,0.5,0.5,0.5,1,0,1,0,1,0,0,1,0.5,0.5,0.5,0.5,1,0,0.5,0.5,0,0.5,0.5,0,1,0,1,0,1,1,0,0,0,1,1,0,0,0.5,0.5,1,0,0,1,0.5,0.5,0,1,0.5,0.5,1,0,0.5,0,0.5,0,1,0,1,1,0,0,1,1,0,1,0,1,0,1,0,0.5,0.5,0.5,0.5,1,0,0,0.5,0.5,1,0,1,0,0.5,0.5,0,1,1,0,1,0,0.5,0.5,0.5,0.5,1,0,0,0,1,0.5,0.5,0.5,0.5,1,0,1,0]
P3G = [0.5,0.5,0.5,0.5,0,1,0.5,0.5,0,1,0.75,0.25,0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0,1,0.75,0.25,0.25,0.75,0.25,0.75,0.5,0.25,0.75,0.25,0.25,0.75,0,1,0.5,0,0,0.5,0.5,0.5,0.25,0.75,0.75,0.25,1,0,0.5,0.5,0.5,0,1,0,1,0.75,0.25,0.5,0.5,0.5,0.5,0,1,1,0,0.5,0.5,0.75,0.25,0,0.75,0.25,0,1,0.25,0.75,0.25,0.75,0.75,0.25,0,0.5,0.5,0.25,0.75,0.5,0,0.5,1,0,0.5,0.5,0.5,0.5,0,1,0.5,0.5,0,1,0.5,0.5,0.5,0.5,0,1,0,0.25,0.75,0.5,0.5,0.25,0.75,0.5,0.5,1,0,0.5,0.5,0.5,0.5,1,0,0.5,0.5,0,0.5,0.5,0.5,0.5,1,0,1,0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0,1,0,1,0.5,0,0.5,0.25,0.75,1,0,1,0,0.5,0.5,0.5,0.5]

matrix = [V, M3, P3G]
matrixNames = ['M3', 'V', 'P3G']

for i in range(len(matrix)):
    for j in range(len(matrix)):

        if i != j:
            d = EuclideanDistance(matrix[i], matrix[j])
            print(f'The Difference between {matrixNames[i]} and {matrixNames[j]} is {d}')